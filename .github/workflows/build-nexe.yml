name: build-and-release
on:
  push:
    tags: ['v*.*.*']
  workflow_dispatch:

jobs:
  linux-x64:
    name: Build Linux x64 (prebuilt)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20', cache: 'npm' }
      - run: npm ci
      - run: npm i -D nexe@latest
      - name: Build
        run: npx nexe -i src/server.js -o dist/streamforge-linux-x64 -t linux-x64-20.11.0
      - run: chmod +x dist/streamforge-linux-x64
      - uses: actions/upload-artifact@v4
        with:
          name: streamforge-linux-x64
          path: dist/streamforge-linux-x64

  windows-x64:
    name: Build Windows x64 (prebuilt)
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20', cache: 'npm' }
      - run: npm ci
      - run: npm i -D nexe@latest
      - name: Build
        run: npx nexe -i src/server.js -o dist/streamforge-win-x64.exe -t windows-x64-20.11.0
      - uses: actions/upload-artifact@v4
        with:
          name: streamforge-win-x64
          path: dist/streamforge-win-x64.exe

  macos-arm64:
    name: Build macOS arm64 (from source)
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20', cache: 'npm' }
      - run: npm ci
      - run: npm i -D nexe@latest
      - name: Build (from source)
        env:
          CC: clang
          CXX: clang++
        run: |
          # Wichtig: --build erzwingt Kompilierung statt Prebuilt-Download
          npx nexe -i src/server.js -o dist/streamforge-macos-arm64 \
            -t macos-arm64-20.11.0 --build --clean --loglevel verbose
      - run: chmod +x dist/streamforge-macos-arm64
      - uses: actions/upload-artifact@v4
        with:
          name: streamforge-macos-arm64
          path: dist/streamforge-macos-arm64

  # Optional: nur wenn du einen Intel-Runner hast; sonst Job entfernen oder continue-on-error belassen
  macos-x64:
    name: Build macOS x64 (from source)
    runs-on: macos-13
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20', cache: 'npm' }
      - run: npm ci
      - run: npm i -D nexe@latest
      - name: Build (from source)
        env:
          CC: clang
          CXX: clang++
        run: |
          npx nexe -i src/server.js -o dist/streamforge-macos-x64 \
            -t macos-x64-20.11.0 --build --clean --loglevel verbose
      - run: chmod +x dist/streamforge-macos-x64 || true
      - uses: actions/upload-artifact@v4
        if: success()
        with:
          name: streamforge-macos-x64
          path: dist/streamforge-macos-x64

  # Optional: braucht self-hosted ARM64 Runner
  linux-arm64:
    name: Build Linux arm64 (from source)
    runs-on: [self-hosted, Linux, ARM64]
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20', cache: 'npm' }
      - name: Toolchain
        run: |
          if command -v apt-get >/dev/null 2>&1; then
            sudo apt-get update
            sudo apt-get install -y python3 g++ make pkg-config libssl-dev
          fi
      - run: npm ci
      - run: npm i -D nexe@latest
      - name: Build (from source)
        run: |
          npx nexe -i src/server.js -o dist/streamforge-linux-arm64 \
            -t linux-arm64-20.11.0 --build --clean --loglevel verbose
      - run: chmod +x dist/streamforge-linux-arm64 || true
      - uses: actions/upload-artifact@v4
        if: success()
        with:
          name: streamforge-linux-arm64
          path: dist/streamforge-linux-arm64

  release:
    name: Create GitHub Release
    needs:
      - linux-x64
      - windows-x64
      - macos-arm64
      - macos-x64
      - linux-arm64
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            dist/**/*
